//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.15 at 10:08:53 AM PDT 
//


package org.tolven.conceptgroup;

import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.bind.PropertyException;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamReader;

/**
 * TrimData (fragment) element factory.
 */
@XmlRegistry
public class ObjectFactory extends org.tolven.trim.ex.TrimFactory {
	JAXBContext jc;
    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.tolven.trim
     * 
     */
    public ObjectFactory() {
    	try {
			jc = JAXBContext.newInstance( "org.tolven.conceptgroup" );
		} catch (JAXBException e) {
			throw new RuntimeException( "Error obtaining JAXBContext for conceptgroup", e);
		}
    }

    /**
     * 
     */
    public ConceptGroup createConceptGroup() {
        return new ConceptGroup();
    }
    
    /**
     * Convert a concept group to XML 
     * @return String containing the XML
     */
    public String toXML(ConceptGroup conceptGroup) {
		try {
			Marshaller m = jc.createMarshaller();
			m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
			m.setProperty(Marshaller.JAXB_FRAGMENT, true);
			StringWriter result = new StringWriter(1000);
			m.marshal(conceptGroup, result);
			result.close();
			return result.toString();
		} catch (Exception e) {
			throw new RuntimeException("Error marshalling conceptgroup " + conceptGroup.getName(), e);
		}

	}
    
    public ConceptGroup createConceptGroup(String xml) {
    	try {
			XMLInputFactory xmlfactory = XMLInputFactory.newInstance();
			StringReader stringReader = new StringReader( xml );
			XMLStreamReader xmlStreamReader = xmlfactory.createXMLStreamReader( stringReader );
	    	Unmarshaller u = jc.createUnmarshaller();
	    	u.setProperty("com.sun.xml.bind.ObjectFactory", this);
	        return (ConceptGroup) u.unmarshal(  xmlStreamReader );
		} catch (Exception e) {
			throw new RuntimeException( "Error parsing conceptgroup: " + xml, e);
		}
    }
}
