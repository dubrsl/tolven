
package org.tolven.ws.document.jaxws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.4.1-hudson-346-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DocumentPort", targetNamespace = "http://tolven.org/document")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DocumentPort {


    /**
     * 
     * @param accountId
     * @param userId
     * @param payload
     * @param xmlns
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:queueMessage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "queueMessage", targetNamespace = "http://tolven.org/document", className = "org.tolven.ws.document.jaxws.QueueMessageRequest")
    @ResponseWrapper(localName = "queueMessageResponse", targetNamespace = "http://tolven.org/document", className = "org.tolven.ws.document.jaxws.QueueMessageResponse")
    public String queueMessage(
        @WebParam(name = "payload", targetNamespace = "")
        byte[] payload,
        @WebParam(name = "xmlns", targetNamespace = "")
        String xmlns,
        @WebParam(name = "accountId", targetNamespace = "")
        long accountId,
        @WebParam(name = "userId", targetNamespace = "")
        long userId);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:test")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "test", targetNamespace = "http://tolven.org/document", className = "org.tolven.ws.document.jaxws.TestRequest")
    @ResponseWrapper(localName = "testResponse", targetNamespace = "http://tolven.org/document", className = "org.tolven.ws.document.jaxws.TestResponse")
    public String test();

}
