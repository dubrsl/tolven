<?xml version="1.0" encoding="UTF-8"?>
	<!-- 
	A generic plugin build file. Import this into your plugin project something like this:
	<import file="../plugin/build.xml"/>
	-->
<project basedir="." name="buildCommon">
	
	<property file="../plugin/build.properties"/>
	
	<!-- 
	****Do not change**** the properties below but rather, create build.properties - a file which will not be touched by Tolven
	in which you can override these properties as needed. For example, it would be common to change 
	tolvenConfig.location as well as the installation.location property  (in the separate build.properties file).
	-->
	<property name="admin.realm" value="tolven"/>
	<property name="admin.user" value="admin"/>
	<property name="admin.password" value="sysadmin"/>
	<property name="tolvenConfig.location" value="c:/tolven-config"/>
	<property name="respositoryLocal.location" value="${tolvenConfig.location}/repositoryLocal"/>
	<property name="tolven.devLib" value="${tolvenConfig.location}/devLib"/>
	<property name="installation.location" value="c:/tolven-RC1"/>
	<property name="xslt.processor.classpath" value="c:/saxon/saxon9he.jar"/>
	
	<!--
	The project classpath is based on Tolven's devLib which is generated by 1) enabling the org.tolven.deploy.source
	plugin in plugins.xml and 2) running that plugin at the command line: tpf -plugin org.tolven.deploy.source
	In Eclipse, be sure to add a User Library pointing to ${tolven.devLib} as well.
	-->
	<path id="project.classpath">
		<fileset dir="${tolven.devLib}">
			<include name="*.jar" />
		</fileset>
	</path>
	<!--
	The tpf classpath is from the installation folder and only contains the TPF boot jar which must be used to 
	update devLib
	-->
	<path id="tpf.classpath">
		<fileset dir="${installation.location}/pluginLib">
			<include name="tpf-boot.jar" />
		</fileset>
	</path>

</project>
