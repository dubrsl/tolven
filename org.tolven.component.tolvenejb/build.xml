<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="deploy-to-local-repository" name="org.tolven.component.tolvenejb">

	<import file="../plugin/buildImport.xml"/>
	
	<property name="buildFolder" value="build"/>
	<property name="includeSourceInDevLib" value="true"/>

	<target name="build-plugin" depends="jar" description="Build all sections of this plugin">
		<zip destfile="${zipFileName}">
			<!-- Add Manifest section -->
			<zipfileset dir="manifest"/>
		</zip>
		<!-- Each section adds itself to the zip file-->
		<!-- Add DevLib.jar to plugin zip -->
		<zip destfile="${zipFileName}" update="true">
			<zipfileset dir="${buildFolder}">
				<include name="devLib.jar"/>
			</zipfileset>
		</zip>
		<antcall target="jar"/>
		<copy toDir="${buildFolder}/ejb/classes" preservelastmodified="true">
			<fileset dir="${buildFolder}/bin" includes="**/*.class" excludes="test/org/**,test/rules/**" />
			<fileset dir="src" includes="**/*.properties" excludes="test/org/**,test/rules/**" />
			<fileset dir="resources/" />
		</copy>
		<copy toDir="${buildFolder}/ejb/META-INF/" preservelastmodified="true">
			<fileset dir="conf" />
		</copy>
		<zip destfile="${zipFileName}" update="true">
			<fileset dir="${buildFolder}">
				<include name="ejb/**"/>
			</fileset>
		</zip>
	</target>
	<target  name="compile" depends="init" description="Compile Tolven EJB modules">
		<mkdir dir="build/bin"/>
		<javac destdir="build/bin" excludes="test/org/**,test/rules/**" debug="true" encoding="UTF-8" >
			<src path="src" />
			<classpath refid="project.classpath"/>
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="jar" depends="compile" description="devLib.jar">
		<jar destfile="build/devLib.jar">
			<zipfileset dir="src" excludes="test/org/**,test/rules/**" />
			<zipfileset dir="${buildFolder}/bin" excludes="test/org/**,test/rules/**" />
		</jar>
	</target>

	<target name="javadoc" description="Generate Javadoc">
		<javadoc access="public" author="true" destdir="${buildFolder}/doc" doctitle="Tolven EJB" 
			overview="src/org/tolven/overview.html" 
			packagenames="*"
			classpathref="project.classpath" 
			source="1.5" sourcepath="src" splitindex="true" use="true" version="true"
		    encoding="UTF-8"  docencoding="UTF-8"/>
	</target>

	<target name="apijavadoc" description="Generate API Javadoc">
		<javadoc access="public" author="true" destdir="${buildFolder}/apidoc" doctitle="Tolven API" 
			overview="src/org/tolven/overview.html" 
			packagenames="org.tolven.core,org.tolven.app,org.tolven.doc,org.tolven.security,org.tolven.gen,org.tolven.mail,org.tolven.provider,org.tolven.trim.api,org.tolven.rules,org.tolven.trim,org.tolven.ccr"
			classpathref="project.classpath" 
			source="1.5" sourcepath="src" splitindex="true" use="true" version="true"
		    encoding="UTF-8"  docencoding="UTF-8"/>
	</target>
	
	<!-- Unless you are changing the XSD, this doesn't need to be run because the generated code is checked into CVS -->
	<target name="gen_userAccount" description="Generate userAccount java from XSD">
		<exec executable="xjc">
			<arg line="-p org.tolven.xml.userAccounts"/>
			<arg line="-d src"/>
			<arg line="-extension"/>
			<arg line="-no-header"/>
			<arg file="resources/xsd/userAccounts.xsd"/>
		</exec>
	</target>
	
	<!-- Unless you are changing the XSD, this doesn't need to be run because the generated code is checked into CVS -->
	<target name="gen_trim" description="Generate trim java from XSD">
		<exec executable="xjc">
			<arg line="-p org.tolven.trim"/>
			<arg line="-d src"/>
			<arg line="-extension"/>
			<arg line="-no-header"/>
			<arg file="resources/xsd/trim4.xsd"/>
		</exec>
	</target>
	<!-- Note: The CCR XSD is restricted by ASTM -->
	<target name="gen_ccr" description="Generate ccr java from XSD">
		<exec executable="xjc">
			<arg line="-p org.tolven.ccr"/>
			<arg line="-d srcx"/>
			<arg line="-extension"/>
			<arg line="-no-header"/>
			<arg file="${ccrXSD.location}"/>
		</exec>
	</target>
	<!-- Unless you are changing the XSD, this doesn't need to be run because the generated code is checked into CVS -->
	<target name="gen_menuStructure" description="Generate menustructure classes from XSD">
		<exec executable="xjc">
			<arg line="-p org.tolven.menuStructure"/>
			<arg line="-d src"/>
			<arg line="-extension"/>
			<arg line="-no-header"/>
			<arg file="resources/xsd/menuStructure.xsd"/>
		</exec>
	</target>
</project>
