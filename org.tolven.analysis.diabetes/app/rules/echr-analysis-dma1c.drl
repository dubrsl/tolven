package echr.analysis.dma1c
 /* Tolven */
import java.util.*;

import org.tolven.app.entity.MenuData;
import org.tolven.app.entity.MenuStructure;
import org.tolven.doc.entity.*;
import org.tolven.trim.*;
import org.tolven.trim.ex.*;

import org.tolven.analysis.SnapshotEvent;
import org.tolven.analysis.DMA1cSnapshotEvent;
import org.tolven.analysis.SnapshotLocal;

global org.tolven.app.AppEvalAdaptor app;
global Date now;

rule "Create patientcohort for dm.a1csnapshot"
	when
		$ms: MenuStructure( role == "placeholder", path == "echr:patient:problem" )
		$md: MenuData( menuStructure == $ms, actStatus!="nullified", string01 matches "(?i).*diabetes.*", $mdPat : parent01 )
		$msPatientcohort: MenuStructure( role == "placeholder", path == "echr:patient:patientcohort" )
		$msCohortPatientList: MenuStructure( role == "list", path == "echr:cohort:patients" )
		$msPatientCohortList: MenuStructure( role == "list", path == "echr:patient:cohorts:current" )
		$msCohort: MenuStructure( role == "placeholder", path == "echr:cohort" )
		$msList: MenuStructure( role == "list", path == "echr:analysis:cohorts:all" )
		$snapshotBean: SnapshotLocal()
	then
		//app.debug( "Create patientcohort for dm.a1csnapshot" );
		MenuData patientcohort = $snapshotBean.findPatientcohort("dm", $mdPat, app.getAccount());
		if(patientcohort == null) {
			MenuData cohort = $snapshotBean.findCohort("dm",  app.getAccount());
			if(cohort == null) {
				cohort = app.createPlaceholder($msCohort);
	            cohort.setString01("Diabetes");
	            cohort.setString02("dm");
	            cohort.setDate01(now);
				$snapshotBean.addCohortPlaceholderID("dm", cohort);
				app.createReferenceMD( cohort, $msList );
			}
			Map<String, Object> menuDataMap = new HashMap<String, Object>();
			menuDataMap.put("patient", $mdPat.getId());
			menuDataMap.put("cohort", cohort.getId());
			patientcohort = app.createPlaceholder( $msPatientcohort, menuDataMap );
			patientcohort.setDate01( now );
			$snapshotBean.addPatientcohortPlaceholderID("dm", patientcohort);
			app.createReferenceMD( patientcohort, $msPatientCohortList );
			app.createReferenceMD( patientcohort, $msCohortPatientList, cohort );
		}
end

rule "Update latest dm.a1csnapshot"
	when
		$ms: MenuStructure( role == "placeholder", path == "echr:patient:result" )
		$md: MenuData( menuStructure == $ms, $mdPat: parent01, string01 matches "(?i).*a1c.*", pqValue01 != null, $pqValue01: pqValue01, pqUnits01 != null, $pqUnits01: pqUnits01, date01 != null, $date: date01 )
		$snapshotBean: SnapshotLocal()
	then
		//app.debug( "Update latest dm.a1csnapshot" );
		MenuData patientcohort = $snapshotBean.findPatientcohort( "dm", $mdPat.getId(), app.getAccount() );
		if(patientcohort != null) {
			MenuData lastA1c = (MenuData) patientcohort.getField("lastA1c");
			if(lastA1c == null || (lastA1c.getField("date01") != null && $date.after(lastA1c.getDateField("date01")))) {
				patientcohort.setField("lastA1c", $md);
			}
		}
end

rule "Insert DMA1cSnapshotEvent into working memory"
	when
		SnapshotEvent( cohortType == "org.tolven.cohort.dm", snapshotType == "a1csnapshot", $snapshotType: snapshotType )
		$msSnapshot: MenuStructure( role == "placeholder", path == "echr:cohort:a1csnapshot" )
		$msSnapshotList: MenuStructure( role == "list", path =="echr:cohort:snapshots:a1csnapshot" )
		$snapshotBean: SnapshotLocal()
	then
		//app.debug( "Insert DMA1cSnapshotEvent into working memory");
		MenuData cohort = $snapshotBean.findCohort("dm",  app.getAccount());
		if(cohort != null) {
			List<MenuData> patientcohorts = $snapshotBean.findCohortPatients(cohort, app.getAccount() );
			for( MenuData patientcohort : patientcohorts) {
				insert ( patientcohort );
			}
			Map<String, Object> menuDataMap = new HashMap<String, Object>();
			menuDataMap.put("cohort", cohort.getId());
			MenuData snapshot = app.createPlaceholder( $msSnapshot, menuDataMap );
			snapshot.setString01("Diabetes A1c");
			snapshot.setDate01( now );
			snapshot.setField("targetPercent", Double.parseDouble(app.getAccount().getProperty().get("org.tolven.cohort.dm.a1csnapshot.target")));
			snapshot.setField("allCount", 0L);
			snapshot.setField("normCount", 0L);
			snapshot.setField("abnormCount", 0L);
			app.createReferenceMD( snapshot, $msSnapshotList );
			DMA1cSnapshotEvent dma1cSnapshotEvent = new DMA1cSnapshotEvent();
			dma1cSnapshotEvent.setCohort(cohort);
			dma1cSnapshotEvent.setSnapshot(snapshot);
			dma1cSnapshotEvent.setA1cLow(Double.parseDouble(app.getAccount().getProperty().get("org.tolven.cohort.dm.a1csnapshot.low")));
			dma1cSnapshotEvent.setA1cHigh(Double.parseDouble(app.getAccount().getProperty().get("org.tolven.cohort.dm.a1csnapshot.high")));
			insert( dma1cSnapshotEvent );
			$snapshotBean.upateMenuDataVersion( "echr:analysis:portal:dma1csnapshotsum", app.getAccount(), now );
		}
end

rule "Insert last dm.a1csnapshot Result into working memory"
	when
		DMA1cSnapshotEvent( $cohort: cohort )
		$msPatientcohort: MenuStructure( role == "placeholder", path == "echr:patient:patientcohort" )
		$mdPatientcohort: MenuData( menuStructure == $msPatientcohort, $mdPat: parent01, parent02 == $cohort )
		eval ($mdPatientcohort.getField("lastA1c") != null )
	then
		//app.debug( "Insert last dm.a1csnapshot Result into working memory" );
		insert($mdPatientcohort.getField("lastA1c"));
end

rule "Create And Insert dm.a1csnapshot Snapshotresult into working memory"
	when
		DMA1cSnapshotEvent( $cohort: cohort, $snapshot: snapshot )
		$msPatientcohort: MenuStructure( role == "placeholder", path == "echr:patient:patientcohort" )
		$mdPatientcohort: MenuData( menuStructure == $msPatientcohort, parent02 == $cohort, $mdPat: parent01 )
		$msResult: MenuStructure( role == "placeholder", path == "echr:patient:result" )
		$mdResult: MenuData( menuStructure == $msResult, parent01 == $mdPat )
		eval ( $mdPatientcohort.getField("lastA1c") != null && $mdPatientcohort.getField("lastA1c").equals($mdResult) )
		$msSnapshotresult: MenuStructure( role == "placeholder", path == "echr:cohort:a1csnapshot:a1csnapshotresult" )
	then
		//app.debug( "Create And Insert dm.a1csnapshot Snapshotresult into working memory" );
		Map<String, Object> menuDataMap = new HashMap<String, Object>();
		menuDataMap.put("a1csnapshot", $snapshot);
		menuDataMap.put("patient", $mdPat);
		menuDataMap.put("result", $mdResult);
		MenuData mdSnapshotresult = app.createPlaceholder( $msSnapshotresult, menuDataMap );
		mdSnapshotresult.setField("a1cValue", $mdResult.getPqValue01());
		mdSnapshotresult.setField("a1cUnits", $mdResult.getPqUnits01());
		mdSnapshotresult.setField("a1cDate", $mdResult.getDate01());
		insert ( mdSnapshotresult );
end

rule "Create And Insert Null dm.a1csnapshot Snapshotresult into working memory"
	when
		DMA1cSnapshotEvent( $cohort: cohort, $snapshot: snapshot )
		$msPatientcohort: MenuStructure( role == "placeholder", path == "echr:patient:patientcohort" )
		$mdPatientcohort: MenuData( menuStructure == $msPatientcohort, parent02 == $cohort, $mdPat: parent01 )
		eval ( $mdPatientcohort.getField("lastA1c") == null )
		$msSnapshotresult: MenuStructure( role == "placeholder", path == "echr:cohort:a1csnapshot:a1csnapshotresult" )
		$snapshotBean: SnapshotLocal()
	then
		//app.debug( "Create And Insert Null dm.a1csnapshot Snapshotresult into working memory" );
		Map<String, Object> menuDataMap = new HashMap<String, Object>();
		menuDataMap.put("a1csnapshot", $snapshot);
		menuDataMap.put("patient", $mdPat);
		MenuData mdSnapshotresult = app.createPlaceholder( $msSnapshotresult, menuDataMap );
		insert ( mdSnapshotresult );
end

rule "Add patientcohorts To dm.a1csnapshot Snapshot Norm List"
	when
		DMA1cSnapshotEvent( $cohort: cohort, $snapshot: snapshot, $a1cLow: a1cLow, $a1cHigh: a1cHigh )
		$msSnapshotresult: MenuStructure( role == "placeholder", path == "echr:cohort:a1csnapshot:a1csnapshotresult" )
		$mdSnapshotresult: MenuData( menuStructure == $msSnapshotresult, $mdPat: parent02 )
		eval ( $mdSnapshotresult.getField("a1cValue") != null && $mdSnapshotresult.getDoubleField("a1cValue") <= $a1cHigh )
		$msNormList: MenuStructure( role == "list", path == "echr:cohort:a1csnapshot:norma1c" )
		$msAllList: MenuStructure( role == "list", path == "echr:cohort:a1csnapshot:all" )
	then
		//app.debug( "Add patientcohorts To dm.a1csnapshot Snapshot Norm List: " + $msNormList);
		app.createReferenceMD( $mdSnapshotresult, $msNormList );
		long count = $snapshot.getLongField("normCount").longValue();
		$snapshot.setField("normCount", ++count);
		app.createReferenceMD( $mdSnapshotresult, $msAllList );
		count = $snapshot.getLongField("allCount").longValue();
		$snapshot.setField("allCount", ++count);
end

rule "Add patientcohorts dm.a1csnapshot Snapshot High List"
	when
		DMA1cSnapshotEvent( $cohort: cohort, $snapshot: snapshot, $a1cLow: a1cLow, $a1cHigh: a1cHigh )
		$msSnapshotresult: MenuStructure( role == "placeholder", path == "echr:cohort:a1csnapshot:a1csnapshotresult" )
		$mdSnapshotresult: MenuData( menuStructure == $msSnapshotresult, $mdPat: parent02 )
		eval ( $mdSnapshotresult.getField("a1cValue") == null || $mdSnapshotresult.getDoubleField("a1cValue") > $a1cHigh )
		$msHighList: MenuStructure( role == "list", path == "echr:cohort:a1csnapshot:abnorma1c" )
		$msAllList: MenuStructure( role == "list", path == "echr:cohort:a1csnapshot:all" )
	then
		//app.debug( "Add patientcohorts dm.a1csnapshot Snapshot High List: " + $msHighList );
		app.createReferenceMD( $mdSnapshotresult, $msHighList );
		long count = $snapshot.getLongField("abnormCount").longValue();
		$snapshot.setField("abnormCount", ++count);
		app.createReferenceMD( $mdSnapshotresult, $msAllList );
		count = $snapshot.getLongField("allCount").longValue();
		$snapshot.setField("allCount", ++count);
end
