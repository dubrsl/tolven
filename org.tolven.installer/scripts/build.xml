<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="install" name="install">

	<property file="build-v2-override.properties" />
	<property file="${password.properties.file}" />
	<property file="${database.properties.file}" />
	<property file="build-v2.properties" />

	<target name="requirements-guide" description="requirements-guide">
		<tstamp>
			<format property="timestamp" pattern="yyyyMMddHHmmss" />
		</tstamp>
		<guide-echo args="Guide Creation Timestamp: ${timestamp}" />
		<guide-echo args="" />

		<guide-echo args="Install Prerequisite Software" />
		<guide-echo args="" />

		<guide-echo args="Install Ant" />
		<guide-echo args="Set environment variable ANT_HOME e.g: ANT_HOME=${ant.home}" />
		<guide-echo args="Add ANT_HOME bin directory to the system path" />
		<guide-echo args="Execute in command window to ensure path is correct" />
		<guide-echo args="ant -version" />
		<condition property="ant" value="${ant.home}/bin/ant.bat" else="${ant.home}/bin/ant">
			<os family="windows" />
		</condition>
		<exec executable="${ant}" outputproperty="ant.home.version.output" failonerror="true">
			<arg line="-version" />
		</exec>
		<guide-echo args="${ant.home.version.output}" />
		<guide-echo args="" />

		<guide-echo args="Install Java JDK" />
		<guide-echo args="Set environment variable JAVA_HOME e.g: JAVA_HOME=${java.home}" />
		<guide-echo args="Add JAVA_HOME bin directory to the system path" />
		<guide-echo args="Execute in command window to ensure path is correct" />
		<guide-echo args="java -version" />
		<exec executable="${java.home}/bin/java" outputproperty="java.home.version.output" failonerror="true">
			<arg line="-version" />
		</exec>
		<guide-echo args="${java.home.version.output}" />
		<guide-echo args="" />

		<guide-echo args="Install database using database documentation" />
		<guide-echo args="If using PostgreSQL, add the PostgreSQL schemas manually (schemas are in wiki) using a vendor tools e.g. pgAdminIII, psql etc)" />
		<guide-echo args="" />

		<guide-echo args="Intial Tolven Components Directory" />
		<guide-echo args="Use this directory to gather all of the components required for the installation." />
		<guide-echo args="Create the directory ${initial.tolven.components.dir}" />
			
		<basename property="tolven.kit.zip.full-basename" file="${tolven.kit.zip}" />
		<guide-echo args="Download Tolven Kit:" />
		<guide-echo args="${tolven.kit.download.site}/${tolven.kit.zip.full-basename}" />
		<dirname property="tolven.kit.zip.dirname" file="${tolven.kit.zip}" />
		<guide-echo args="Place ${tolven.kit.zip.full-basename} in ${tolven.kit.zip.dirname}" />
		<guide-echo args="" />

		<basename property="openam.config.plugin.full-basename" file="${openam.config.plugin}" />
		<guide-echo args="Download Tolven OpenAM Plugin: ${v2.plugin.download.site}/${openam.config.plugin.full-basename}" />
		<dirname property="openam.config.plugin.dirname" file="${openam.config.plugin}" />
		<guide-echo args="Place ${openam.config.plugin.full-basename} in: ${openam.config.plugin.dirname}" />
		<guide-echo args="" />

		<basename property="opends.plugin.full-basename" file="${opends.plugin}" />
		<guide-echo args="Download Tolven OpenDS Plugin: ${v2.plugin.download.site}/${opends.plugin.full-basename}" />
		<dirname property="opends.plugin.dirname" file="${opends.plugin}" />
		<guide-echo args="Place ${opends.plugin.full-basename} in: ${opends.plugin.dirname}" />
		<guide-echo args="" />

		<basename property="jdbc.driver.full-basename" file="${jdbc.driver}" />
		<guide-echo args="Download JDBC Driver: ${jdbc.driver.full-basename} from database site" />
		<dirname property="jdbc.driver.dirname" file="${jdbc.driver}" />
		<guide-echo args="Place ${jdbc.driver.full-basename} in: ${jdbc.driver.dirname}" />
		<guide-echo args="" />

		<basename property="opends.zip.full-basename" file="${opends.zip}" />
		<guide-echo args="Download OpenDS Software: ${v2.plugin.download.site}/${opends.zip.full-basename}" />
		<dirname property="opends.zip.dirname" file="${opends.zip}" />
		<guide-echo args="Place ${opends.zip.full-basename} in: ${opends.zip.dirname}" />
		<guide-echo args="" />

		<basename property="openam.zip.full-basename" file="${openam.zip}" />
		<guide-echo args="Download OpenAM Software: ${v2.plugin.download.site}/${openam.zip.full-basename}" />
		<dirname property="openam.zip.dirname" file="${openam.zip}" />
		<guide-echo args="Place ${openam.zip.full-basename} in: ${openam.zip.dirname}" />
		<guide-echo args="" />

		<basename property="policyagent.zip.full-basename" file="${policyagent.zip}" />
		<guide-echo args="Download Policy Agent: ${v2.plugin.download.site}/${policyagent.zip.full-basename}" />
		<dirname property="policyagent.zip.dirname" file="${policyagent.zip}" />
		<guide-echo args="Place ${policyagent.zip.full-basename} in: ${policyagent.zip.dirname}" />
		<guide-echo args="" />

		<basename property="glassfish.zip.full-basename" file="${glassfish.zip}" />
		<guide-echo args="Download Glassfish: ${v2.plugin.download.site}/${glassfish.zip.full-basename}" />
		<dirname property="glassfish.zip.dirname" file="${glassfish.zip}" />
		<guide-echo args="Place ${glassfish.zip.full-basename} in: ${glassfish.zip.dirname}" />
		<guide-echo args="" />

		<basename property="tomcat.zip.full-basename" file="${tomcat.zip}" />
		<guide-echo args="Download Apache Tomcat: ${v2.plugin.download.site}/${tomcat.zip.full-basename}" />
		<dirname property="tomcat.zip.dirname" file="${tomcat.zip}" />
		<guide-echo args="Place ${tomcat.zip.full-basename} in: ${tomcat.zip.dirname}" />
		<guide-echo args="" />

		<guide-echo args="Set Up Your Security Environment" />
		<guide-echo args="" />
		<guide-echo args="Set Up Server Name" />
		<guide-echo args="If you don't have a domain name registered on the internet, you can add an entry to the hosts file for each node containing the IP address and the domain name - each name with at least two dots" />
		<guide-echo args="192.168.1.101 ${tolven.domain.default}" />
		<guide-echo args="" />

		<basename property="common.keystore.src.full-basename" file="${common.keystore.src}" />
		<guide-echo args="Set Up SSL Keystore" />
		<dirname property="common.keystore.src.dirname" file="${common.keystore.src}" />
		<guide-echo args="cd ${common.keystore.src.dirname}" />
		<guide-echo args="keytool -genkey -alias tolven -dname &quot;cn=${tolven.domain.default}, ou=services, o=tolven, c=US&quot; -keystore keystore.jks -storepass tolven -keypass tolven -validity 7300" />
		<guide-echo args="" />

		<basename property="common.truststore.src.full-basename" file="${common.truststore.src}" />
		<guide-echo args="Set Up SSL Truststore" />
		<dirname property="common.truststore.src.dirname" file="${common.truststore.src}" />
		<guide-echo args="cd ${common.truststore.src.dirname}" />
		<guide-echo args="keytool -export  -alias tolven -file cert.cer -rfc -keystore keystore.jks -storepass tolven" />
		<guide-echo args="keytool -import -alias ${tolven.domain.default} -file cert.cer -keystore cacerts.jks -trustcacerts -storepass tolven -keypass tolven" />
		<guide-echo args="" />

		<basename property="mdbuser.keystore.src.full-basename" file="${mdbuser.keystore.src}" />
		<guide-echo args="Set Up MQKeystore" />
		<dirname property="mdbuser.keystore.src.dirname" file="${mdbuser.keystore.src}" />
		<guide-echo args="cd ${mdbuser.keystore.src.dirname}" />
		<guide-echo args="keytool -genkeypair -alias mdbuser -keyalg RSA -dname &quot;cn=mdbuser, ou=services, o=tolven, c=US&quot; -keystore tolvendev-mdbuser.p12 -storetype pkcs12 -storepass tolven -keypass tolven -validity 7300" />
		<guide-echo args="" />
		
	</target>

	<target name="install-requirements" depends="requirements-guide" description="install-requirements">
		<antcall target="include-tolven-kit-install-requirements" />
		<antcall target="include-tolven-opends-install-requirements" />
		<antcall target="include-openam-install-requirements" />
		<antcall target="include-appserver-install-requirements" />
	</target>

	<target name="include-tolven-kit-install-requirements" unless="exclude.tolven.kit">
		<ant antfile="build-v2-kit.xml" target="install-requirements" />
	</target>

	<target name="include-tolven-opends-install-requirements" unless="exclude.tolven.opends">
		<ant antfile="build-v2-opends.xml" target="install-requirements" />
	</target>

	<target name="include-openam-install-requirements" unless="exclude.openam">
		<ant antfile="build-v2-openam.xml" target="install-requirements" />
	</target>

	<target name="include-appserver-install-requirements" unless="exclude.appserver">
		<ant antfile="build-v2-glassfish.xml" target="install-requirements" />
		<ant antfile="build-v2-policyagent.xml" target="install-requirements" />
	</target>

	<target name="install" depends="install-requirements" description="install">
		<antcall target="include-tolven-kit-install" />
		<antcall target="include-tolven-opends-install" />
		<antcall target="include-openam-install" />
		<antcall target="include-appserver-install" />
	</target>

	<target name="include-tolven-kit-install" unless="exclude.tolven.kit">
		<ant antfile="build-v2-kit.xml" target="install" />
	</target>

	<target name="include-tolven-opends-install" unless="exclude.tolven.opends">
		<ant antfile="build-v2-opends.xml" target="install" />
	</target>

	<target name="include-openam-install" unless="exclude.openam">
		<ant antfile="build-v2-openam.xml" target="install" />
	</target>

	<target name="include-appserver-install" unless="exclude.appserver">
		<ant antfile="build-v2-glassfish.xml" target="install" />
		<antcall target="include-policyagent-install" />
	</target>

	<target name="include-policyagent-install" unless="exclude.policyagent">
		<ant antfile="build-v2-policyagent.xml" target="install" />
	</target>

	<target name="config-tolven" description="config-tolven">
		<ant antfile="build-v2-kit.xml" target="assemble-tolven" />
		<antcall target="include-config-tolven-opends" />
		<antcall target="include-config-openam" />
		<antcall target="include-config-appserver" />
	</target>

	<target name="include-config-tolven-opends" unless="exclude.tolven.opends">
		<ant antfile="build-v2-opends.xml" target="start-opends" />
		<ant antfile="build-v2-opends.xml" target="config-opends" />
	</target>

	<target name="include-config-openam" unless="exclude.openam">
		<ant antfile="build-v2-openam.xml" target="start-openam" />
		<ant antfile="build-v2-openam.xml" target="config-openam" />
	</target>

	<target name="include-config-appserver" unless="exclude.appserver">
		<antcall target="include-config-policyagent" />
		<ant antfile="build-v2-glassfish.xml" target="update-glassfish-keystore" />
		<ant antfile="build-v2-glassfish.xml" target="start-glassfish" />
		<ant antfile="build-v2-glassfish.xml" target="config-glassfish" />
		<ant antfile="build-v2-glassfish.xml" target="stop-glassfish" />
		<ant antfile="build-v2-glassfish.xml" target="prepare-tolven-glassfish" />
		<ant antfile="build-v2-glassfish.xml" target="start-glassfish" />
		<ant antfile="build-v2-glassfish.xml" target="config-tolven-glassfish" />
		<antcall target="include-appserver-upload" />
	</target>

	<target name="include-config-policyagent" unless="exclude.policyagent">
		<ant antfile="build-v2-policyagent.xml" target="config-policyagent" />
	</target>

	<target name="include-appserver-upload" unless="exclude.appserver.upload">
		<ant antfile="build-v2-kit.xml" target="tolven-post-installation" />
	</target>

	<macrodef name="guide-echo">
		<attribute name="args" />
		<sequential>
			<echo message="@{args}${line.separator}" file="${guide.file}" append="true" />
		</sequential>
	</macrodef>

</project>
